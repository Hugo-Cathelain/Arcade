///////////////////////////////////////////////////////////////////////////////
// Header guard
///////////////////////////////////////////////////////////////////////////////
#pragma once

///////////////////////////////////////////////////////////////////////////////
// Dependencies
///////////////////////////////////////////////////////////////////////////////
#include "Arcade/interfaces/IGameModule.hpp"

///////////////////////////////////////////////////////////////////////////////
// Namespace Arc
///////////////////////////////////////////////////////////////////////////////
namespace Arc
{

#define SPRITE_PACMAN       IGameModule::Asset({0, 4}, "()", {16, 16})
#define SPRITE_PACMAN_R1    IGameModule::Asset({0, 0}, "()", {16, 16})
#define SPRITE_PACMAN_R2    IGameModule::Asset({0, 2}, "()", {16, 16})
#define SPRITE_PACMAN_L1    IGameModule::Asset({2, 0}, "()", {16, 16})
#define SPRITE_PACMAN_L2    IGameModule::Asset({2, 2}, "()", {16, 16})
#define SPRITE_PACMAN_U1    IGameModule::Asset({4, 0}, "()", {16, 16})
#define SPRITE_PACMAN_U2    IGameModule::Asset({4, 2}, "()", {16, 16})
#define SPRITE_PACMAN_D1    IGameModule::Asset({6, 0}, "()", {16, 16})
#define SPRITE_PACMAN_D2    IGameModule::Asset({6, 2}, "()", {16, 16})

#define SPRITE_RED_R1       IGameModule::Asset({12, 0}, "/\\", {16, 16})
#define SPRITE_RED_R2       IGameModule::Asset({14, 0}, "/\\", {16, 16})
#define SPRITE_RED_L1       IGameModule::Asset({16, 0}, "/\\", {16, 16})
#define SPRITE_RED_L2       IGameModule::Asset({18, 0}, "/\\", {16, 16})
#define SPRITE_RED_U1       IGameModule::Asset({20, 0}, "/\\", {16, 16})
#define SPRITE_RED_U2       IGameModule::Asset({22, 0}, "/\\", {16, 16})
#define SPRITE_RED_D1       IGameModule::Asset({24, 0}, "/\\", {16, 16})
#define SPRITE_RED_D2       IGameModule::Asset({26, 0}, "/\\", {16, 16})

#define SPRITE_PINK_R1      IGameModule::Asset({12, 2}, "/\\", {16, 16})
#define SPRITE_PINK_R2      IGameModule::Asset({14, 2}, "/\\", {16, 16})
#define SPRITE_PINK_L1      IGameModule::Asset({16, 2}, "/\\", {16, 16})
#define SPRITE_PINK_L2      IGameModule::Asset({18, 2}, "/\\", {16, 16})
#define SPRITE_PINK_U1      IGameModule::Asset({20, 2}, "/\\", {16, 16})
#define SPRITE_PINK_U2      IGameModule::Asset({22, 2}, "/\\", {16, 16})
#define SPRITE_PINK_D1      IGameModule::Asset({24, 2}, "/\\", {16, 16})
#define SPRITE_PINK_D2      IGameModule::Asset({26, 2}, "/\\", {16, 16})

#define SPRITE_CYAN_R1      IGameModule::Asset({12, 4}, "/\\", {16, 16})
#define SPRITE_CYAN_R2      IGameModule::Asset({14, 4}, "/\\", {16, 16})
#define SPRITE_CYAN_L1      IGameModule::Asset({16, 4}, "/\\", {16, 16})
#define SPRITE_CYAN_L2      IGameModule::Asset({18, 4}, "/\\", {16, 16})
#define SPRITE_CYAN_U1      IGameModule::Asset({20, 4}, "/\\", {16, 16})
#define SPRITE_CYAN_U2      IGameModule::Asset({22, 4}, "/\\", {16, 16})
#define SPRITE_CYAN_D1      IGameModule::Asset({24, 4}, "/\\", {16, 16})
#define SPRITE_CYAN_D2      IGameModule::Asset({26, 4}, "/\\", {16, 16})

#define SPRITE_ORANGE_R1    IGameModule::Asset({12, 6}, "/\\", {16, 16})
#define SPRITE_ORANGE_R2    IGameModule::Asset({14, 6}, "/\\", {16, 16})
#define SPRITE_ORANGE_L1    IGameModule::Asset({16, 6}, "/\\", {16, 16})
#define SPRITE_ORANGE_L2    IGameModule::Asset({18, 6}, "/\\", {16, 16})
#define SPRITE_ORANGE_U1    IGameModule::Asset({20, 6}, "/\\", {16, 16})
#define SPRITE_ORANGE_U2    IGameModule::Asset({22, 6}, "/\\", {16, 16})
#define SPRITE_ORANGE_D1    IGameModule::Asset({24, 6}, "/\\", {16, 16})
#define SPRITE_ORANGE_D2    IGameModule::Asset({26, 6}, "/\\", {16, 16})

#define SPRITE_DOOR_LEFT    IGameModule::Asset({2, 4}, "|-")
#define SPRITE_DOOR_MID     IGameModule::Asset({3, 4}, "--")
#define SPRITE_DOOR_RIGHT   IGameModule::Asset({2, 5}, "-|")

#define SPRITE_TILE_EMPTY   IGameModule::Asset({3, 5}, "  ")
#define SPRITE_TILE_PACGUM  IGameModule::Asset({1, 6}, "[]")
#define SPRITE_TILE_POINT   IGameModule::Asset({1, 7}, "**")

#define SPRITE_TURN_BR2     IGameModule::Asset({10, 8}, "//")
#define SPRITE_TURN_LB2     IGameModule::Asset({11, 8}, "\\\\")
#define SPRITE_TURN_TR2     IGameModule::Asset({10, 9}, "\\\\")
#define SPRITE_TURN_LT2     IGameModule::Asset({11, 9}, "//")

#define SPRITE_TURN_1LB2    IGameModule::Asset({0, 6}, "\\\\")
#define SPRITE_TURN_1BR2    IGameModule::Asset({0, 7}, "//")

#define SPRITE_WALL_L2      IGameModule::Asset({8, 8}, "||")
#define SPRITE_WALL_T2      IGameModule::Asset({9, 8}, "==")
#define SPRITE_WALL_B2      IGameModule::Asset({8, 9}, "==")
#define SPRITE_WALL_R2      IGameModule::Asset({9, 9}, "||")

#define SPRITE_TURN_SBR1    IGameModule::Asset({6, 4}, " /")
#define SPRITE_TURN_SLB1    IGameModule::Asset({7, 4}, "\\ ")
#define SPRITE_TURN_STR1    IGameModule::Asset({6, 5}, " \\")
#define SPRITE_TURN_SLT1    IGameModule::Asset({7, 5}, "/ ")

#define SPRITE_TURN_XBR1    IGameModule::Asset({6, 6}, " /")
#define SPRITE_TURN_XLB1    IGameModule::Asset({7, 6}, "\\ ")
#define SPRITE_TURN_XTR1    IGameModule::Asset({6, 7}, " \\")
#define SPRITE_TURN_XLT1    IGameModule::Asset({7, 7}, "/ ")

#define SPRITE_WALL_L1      IGameModule::Asset({4, 4}, " |")
#define SPRITE_WALL_T1      IGameModule::Asset({5, 4}, "--")
#define SPRITE_WALL_B1      IGameModule::Asset({4, 5}, "--")
#define SPRITE_WALL_R1      IGameModule::Asset({5, 5}, "| ")

static const std::vector<std::vector<IGameModule::Asset>> PACMAN_MAP = {
    { // Row 1
        SPRITE_TURN_BR2, SPRITE_WALL_T2, SPRITE_WALL_T2, SPRITE_WALL_T2,
        SPRITE_WALL_T2, SPRITE_WALL_T2, SPRITE_WALL_T2, SPRITE_WALL_T2,
        SPRITE_WALL_T2, SPRITE_WALL_T2, SPRITE_WALL_T2, SPRITE_WALL_T2,
        SPRITE_WALL_T2, SPRITE_TURN_1LB2, SPRITE_TURN_1BR2, SPRITE_WALL_T2,
        SPRITE_WALL_T2, SPRITE_WALL_T2, SPRITE_WALL_T2, SPRITE_WALL_T2,
        SPRITE_WALL_T2, SPRITE_WALL_T2, SPRITE_WALL_T2, SPRITE_WALL_T2,
        SPRITE_WALL_T2, SPRITE_WALL_T2, SPRITE_WALL_T2, SPRITE_TURN_LB2
    },
    { // Row 2
        SPRITE_WALL_L2, SPRITE_TILE_EMPTY, SPRITE_TILE_EMPTY, SPRITE_TILE_EMPTY,
        SPRITE_TILE_EMPTY, SPRITE_TILE_EMPTY, SPRITE_TILE_EMPTY, SPRITE_TILE_EMPTY,
        SPRITE_TILE_EMPTY, SPRITE_TILE_EMPTY, SPRITE_TILE_EMPTY, SPRITE_TILE_EMPTY,
        SPRITE_TILE_EMPTY, SPRITE_WALL_L1, SPRITE_WALL_R1, SPRITE_TILE_EMPTY,
        SPRITE_TILE_EMPTY, SPRITE_TILE_EMPTY, SPRITE_TILE_EMPTY, SPRITE_TILE_EMPTY,
        SPRITE_TILE_EMPTY, SPRITE_TILE_EMPTY, SPRITE_TILE_EMPTY, SPRITE_TILE_EMPTY,
        SPRITE_TILE_EMPTY, SPRITE_TILE_EMPTY, SPRITE_TILE_EMPTY, SPRITE_WALL_R2
    },
    { // Row 3
        SPRITE_WALL_L2, SPRITE_TILE_EMPTY, SPRITE_TURN_SBR1, SPRITE_WALL_T1,
        SPRITE_WALL_T1, SPRITE_TURN_SLB1, SPRITE_TILE_EMPTY, SPRITE_TURN_SBR1,
        SPRITE_WALL_T1, SPRITE_WALL_T1, SPRITE_WALL_T1, SPRITE_TURN_SLB1,
        SPRITE_TILE_EMPTY, SPRITE_WALL_L1, SPRITE_WALL_R1, SPRITE_TILE_EMPTY,
        SPRITE_TURN_SBR1, SPRITE_WALL_T1, SPRITE_WALL_T1, SPRITE_WALL_T1,
        SPRITE_TURN_SLB1, SPRITE_TILE_EMPTY, SPRITE_TURN_SBR1, SPRITE_WALL_T1,
        SPRITE_WALL_T1, SPRITE_TURN_SLB1, SPRITE_TILE_EMPTY, SPRITE_WALL_R2
    },
    { // Row 4
        SPRITE_WALL_L2, SPRITE_TILE_EMPTY, SPRITE_WALL_L1, SPRITE_TILE_EMPTY,
        SPRITE_TILE_EMPTY, SPRITE_WALL_R1, SPRITE_TILE_EMPTY, SPRITE_WALL_L1,
        SPRITE_TILE_EMPTY, SPRITE_TILE_EMPTY, SPRITE_TILE_EMPTY, SPRITE_WALL_R1,
        SPRITE_TILE_EMPTY, SPRITE_WALL_L1, SPRITE_WALL_R1, SPRITE_TILE_EMPTY,
        SPRITE_WALL_L1, SPRITE_TILE_EMPTY, SPRITE_TILE_EMPTY, SPRITE_TILE_EMPTY,
        SPRITE_WALL_R1, SPRITE_TILE_EMPTY, SPRITE_WALL_L1, SPRITE_TILE_EMPTY,
        SPRITE_TILE_EMPTY, SPRITE_WALL_R1, SPRITE_TILE_EMPTY, SPRITE_WALL_R2
    },
    { // Row 5
        SPRITE_WALL_L2, SPRITE_TILE_EMPTY, SPRITE_TURN_STR1, SPRITE_WALL_B1,
        SPRITE_WALL_B1, SPRITE_TURN_SLT1, SPRITE_TILE_EMPTY, SPRITE_TURN_STR1,
        SPRITE_WALL_B1, SPRITE_WALL_B1, SPRITE_WALL_B1, SPRITE_TURN_SLT1,
        SPRITE_TILE_EMPTY, SPRITE_TURN_STR1, SPRITE_TURN_SLT1, SPRITE_TILE_EMPTY,
        SPRITE_TURN_STR1, SPRITE_WALL_B1, SPRITE_WALL_B1, SPRITE_WALL_B1,
        SPRITE_TURN_SLT1, SPRITE_TILE_EMPTY, SPRITE_TURN_STR1, SPRITE_WALL_B1,
        SPRITE_WALL_B1, SPRITE_TURN_SLT1, SPRITE_TILE_EMPTY, SPRITE_WALL_R2
    },
    { // Row 6
        SPRITE_WALL_L2, SPRITE_TILE_EMPTY, SPRITE_TILE_EMPTY, SPRITE_TILE_EMPTY,
        SPRITE_TILE_EMPTY, SPRITE_TILE_EMPTY, SPRITE_TILE_EMPTY, SPRITE_TILE_EMPTY,
        SPRITE_TILE_EMPTY, SPRITE_TILE_EMPTY, SPRITE_TILE_EMPTY, SPRITE_TILE_EMPTY,
        SPRITE_TILE_EMPTY, SPRITE_TILE_EMPTY, SPRITE_TILE_EMPTY, SPRITE_TILE_EMPTY,
        SPRITE_TILE_EMPTY, SPRITE_TILE_EMPTY, SPRITE_TILE_EMPTY, SPRITE_TILE_EMPTY,
        SPRITE_TILE_EMPTY, SPRITE_TILE_EMPTY, SPRITE_TILE_EMPTY, SPRITE_TILE_EMPTY,
        SPRITE_TILE_EMPTY, SPRITE_TILE_EMPTY, SPRITE_TILE_EMPTY, SPRITE_WALL_R2
    },
    { // Row 7
        SPRITE_WALL_L2, SPRITE_TILE_EMPTY, SPRITE_TURN_SBR1, SPRITE_WALL_T1,
        SPRITE_WALL_T1, SPRITE_TURN_SLB1, SPRITE_TILE_EMPTY, SPRITE_TURN_SBR1,
        SPRITE_TURN_SLB1, SPRITE_TILE_EMPTY, SPRITE_TURN_SBR1, SPRITE_WALL_T1,
        SPRITE_WALL_T1, SPRITE_WALL_T1, SPRITE_WALL_T1, SPRITE_WALL_T1,
        SPRITE_WALL_T1, SPRITE_TURN_SLB1, SPRITE_TILE_EMPTY, SPRITE_TURN_SBR1,
        SPRITE_TURN_SLB1, SPRITE_TILE_EMPTY, SPRITE_TURN_SBR1, SPRITE_WALL_T1,
        SPRITE_WALL_T1, SPRITE_TURN_SLB1, SPRITE_TILE_EMPTY, SPRITE_WALL_R2
    },
    { // Row 8
        SPRITE_WALL_L2, SPRITE_TILE_EMPTY, SPRITE_TURN_STR1, SPRITE_WALL_B1,
        SPRITE_WALL_B1, SPRITE_TURN_SLT1, SPRITE_TILE_EMPTY, SPRITE_WALL_L1,
        SPRITE_WALL_R1, SPRITE_TILE_EMPTY, SPRITE_TURN_STR1, SPRITE_WALL_B1,
        SPRITE_WALL_B1, SPRITE_TURN_XLB1, SPRITE_TURN_XBR1, SPRITE_WALL_B1,
        SPRITE_WALL_B1, SPRITE_TURN_SLT1, SPRITE_TILE_EMPTY, SPRITE_WALL_L1,
        SPRITE_WALL_R1, SPRITE_TILE_EMPTY, SPRITE_TURN_STR1, SPRITE_WALL_B1,
        SPRITE_WALL_B1, SPRITE_TURN_SLT1, SPRITE_TILE_EMPTY, SPRITE_WALL_R2
    },
    { // Row 9
        SPRITE_WALL_L2, SPRITE_TILE_EMPTY, SPRITE_TILE_EMPTY, SPRITE_TILE_EMPTY,
        SPRITE_TILE_EMPTY, SPRITE_TILE_EMPTY, SPRITE_TILE_EMPTY, SPRITE_WALL_L1,
        SPRITE_WALL_R1, SPRITE_TILE_EMPTY, SPRITE_TILE_EMPTY, SPRITE_TILE_EMPTY,
        SPRITE_TILE_EMPTY, SPRITE_WALL_L1, SPRITE_WALL_R1, SPRITE_TILE_EMPTY,
        SPRITE_TILE_EMPTY, SPRITE_TILE_EMPTY, SPRITE_TILE_EMPTY, SPRITE_WALL_L1,
        SPRITE_WALL_R1, SPRITE_TILE_EMPTY, SPRITE_TILE_EMPTY, SPRITE_TILE_EMPTY,
        SPRITE_TILE_EMPTY, SPRITE_TILE_EMPTY, SPRITE_TILE_EMPTY, SPRITE_WALL_R2
    },
    { // Row 10
        SPRITE_TURN_TR2, SPRITE_WALL_B2, SPRITE_WALL_B2, SPRITE_WALL_B2, SPRITE_WALL_B2,
        SPRITE_TURN_SLB1, SPRITE_TILE_EMPTY, SPRITE_WALL_L1, SPRITE_TURN_XTR1,
        SPRITE_WALL_T1, SPRITE_WALL_T1, SPRITE_TURN_SLB1, SPRITE_TILE_EMPTY,
        SPRITE_WALL_L1, SPRITE_WALL_R1, SPRITE_TILE_EMPTY, SPRITE_TURN_SBR1,
        SPRITE_WALL_T1, SPRITE_WALL_T1, SPRITE_TURN_XLT1, SPRITE_WALL_R1,
        SPRITE_TILE_EMPTY, SPRITE_TURN_SBR1, SPRITE_WALL_B2, SPRITE_WALL_B2,
        SPRITE_WALL_B2, SPRITE_WALL_B2, SPRITE_TURN_LT2
    },
    { // Row 11
        SPRITE_TILE_EMPTY, SPRITE_TILE_EMPTY, SPRITE_TILE_EMPTY, SPRITE_TILE_EMPTY,
        SPRITE_TILE_EMPTY, SPRITE_WALL_L2, SPRITE_TILE_EMPTY, SPRITE_WALL_L1,
        SPRITE_TURN_XBR1, SPRITE_WALL_B1, SPRITE_WALL_B1, SPRITE_TURN_SLT1,
        SPRITE_TILE_EMPTY, SPRITE_TURN_STR1, SPRITE_TURN_SLT1,
        SPRITE_TILE_EMPTY, SPRITE_TURN_STR1, SPRITE_WALL_B1, SPRITE_WALL_B1,
        SPRITE_TURN_XLB1, SPRITE_WALL_R1, SPRITE_TILE_EMPTY, SPRITE_WALL_R2,
        SPRITE_TILE_EMPTY, SPRITE_TILE_EMPTY, SPRITE_TILE_EMPTY, SPRITE_TILE_EMPTY,
        SPRITE_TILE_EMPTY
    },
    { // Row 12
        SPRITE_TILE_EMPTY, SPRITE_TILE_EMPTY, SPRITE_TILE_EMPTY, SPRITE_TILE_EMPTY,
        SPRITE_TILE_EMPTY, SPRITE_WALL_L2, SPRITE_TILE_EMPTY, SPRITE_WALL_L1,
        SPRITE_WALL_R1, SPRITE_TILE_EMPTY, SPRITE_TILE_EMPTY, SPRITE_TILE_EMPTY,
        SPRITE_TILE_EMPTY, SPRITE_TILE_EMPTY, SPRITE_TILE_EMPTY, SPRITE_TILE_EMPTY,
        SPRITE_TILE_EMPTY, SPRITE_TILE_EMPTY, SPRITE_TILE_EMPTY, SPRITE_WALL_L1,
        SPRITE_WALL_R1, SPRITE_TILE_EMPTY, SPRITE_WALL_R2, SPRITE_TILE_EMPTY,
        SPRITE_TILE_EMPTY, SPRITE_TILE_EMPTY, SPRITE_TILE_EMPTY,
        SPRITE_TILE_EMPTY,
    },
    { // Row 13

    },
    { // Row 14

    },
    { // Row 15

    },
    { // Row 16

    },
    { // Row 17

    },
    { // Row 18

    },
    { // Row 19

    },
    { // Row 20

    },
    { // Row 21

    },
    { // Row 22

    },
    { // Row 23

    },
    { // Row 24

    },
    { // Row 25

    },
    { // Row 26

    },
    { // Row 27

    },
    { // Row 28

    },
    { // Row 29
        SPRITE_WALL_L2, SPRITE_TILE_EMPTY, SPRITE_TURN_STR1, SPRITE_WALL_B1,
        SPRITE_WALL_B1, SPRITE_WALL_B1, SPRITE_WALL_B1, SPRITE_WALL_B1, SPRITE_WALL_B1,
        SPRITE_WALL_B1, SPRITE_WALL_B1, SPRITE_TURN_SLT1, SPRITE_TILE_EMPTY,
        SPRITE_TURN_STR1, SPRITE_TURN_SLT1, SPRITE_TILE_EMPTY, SPRITE_TURN_STR1,
        SPRITE_WALL_B1, SPRITE_WALL_B1, SPRITE_WALL_B1, SPRITE_WALL_B1,
        SPRITE_WALL_B1, SPRITE_WALL_B1, SPRITE_WALL_B1, SPRITE_WALL_B1,
        SPRITE_TURN_SLT1, SPRITE_TILE_EMPTY, SPRITE_WALL_R2
    },
    { // Row 30
        SPRITE_WALL_L2, SPRITE_TILE_EMPTY, SPRITE_TILE_EMPTY, SPRITE_TILE_EMPTY,
        SPRITE_TILE_EMPTY, SPRITE_TILE_EMPTY, SPRITE_TILE_EMPTY, SPRITE_TILE_EMPTY,
        SPRITE_TILE_EMPTY, SPRITE_TILE_EMPTY, SPRITE_TILE_EMPTY, SPRITE_TILE_EMPTY,
        SPRITE_TILE_EMPTY, SPRITE_TILE_EMPTY, SPRITE_TILE_EMPTY, SPRITE_TILE_EMPTY,
        SPRITE_TILE_EMPTY, SPRITE_TILE_EMPTY, SPRITE_TILE_EMPTY, SPRITE_TILE_EMPTY,
        SPRITE_TILE_EMPTY, SPRITE_TILE_EMPTY, SPRITE_TILE_EMPTY, SPRITE_TILE_EMPTY,
        SPRITE_TILE_EMPTY, SPRITE_TILE_EMPTY, SPRITE_TILE_EMPTY, SPRITE_WALL_R2
    },
    { // Row 31
        SPRITE_TURN_TR2, SPRITE_WALL_B2, SPRITE_WALL_B2, SPRITE_WALL_B2, SPRITE_WALL_B2,
        SPRITE_WALL_B2, SPRITE_WALL_B2, SPRITE_WALL_B2, SPRITE_WALL_B2, SPRITE_WALL_B2,
        SPRITE_WALL_B2, SPRITE_WALL_B2, SPRITE_WALL_B2, SPRITE_WALL_B2, SPRITE_WALL_B2,
        SPRITE_WALL_B2, SPRITE_WALL_B2, SPRITE_WALL_B2, SPRITE_WALL_B2, SPRITE_WALL_B2,
        SPRITE_WALL_B2, SPRITE_WALL_B2, SPRITE_WALL_B2, SPRITE_WALL_B2, SPRITE_WALL_B2,
        SPRITE_WALL_B2, SPRITE_WALL_B2, SPRITE_TURN_LT2
    }
};

} // namespace Arc
