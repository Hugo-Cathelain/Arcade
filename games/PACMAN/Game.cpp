///////////////////////////////////////////////////////////////////////////////
// Dependencies
///////////////////////////////////////////////////////////////////////////////
#include "games/PACMAN/Game.hpp"
#include "games/PACMAN/Assets.hpp"
#include "games/PACMAN/Menu.hpp"
#include "../../Arcade/interfaces/IGameModule.hpp"
#include "../../Arcade/core/API.hpp"

///////////////////////////////////////////////////////////////////////////////
// Namespace Arc::Pacman
///////////////////////////////////////////////////////////////////////////////
namespace Arc::Pacman
{

///////////////////////////////////////////////////////////////////////////////
Game::Game(void)
    : mTimer(0.f)
    , mPlaying(false)
{}

///////////////////////////////////////////////////////////////////////////////
Game::~Game()
{}

///////////////////////////////////////////////////////////////////////////////
void Game::DrawMapBaseLayer(void)
{
    static const int offsetY = ARCADE_SCREEN_HEIGHT - ARCADE_GAME_HEIGHT;

    for (int y = 0; y < ARCADE_GAME_HEIGHT; y++) {
        for (int x = 0; x < ARCADE_GAME_WIDTH; x++) {
            API::Draw(SPRITES[PACMAN_MAP[y][x]], {x, y + offsetY});
        }
    }

    if (!mPlaying) {
        Menu::Text(
            "READY!", Menu::TextColor::TEXT_YELLOW,
            Vec2i{11, 17 + offsetY}
        );
    }
}

///////////////////////////////////////////////////////////////////////////////
void Game::DrawScore(void)
{
    Menu::Text("1UP   HIGH SCORE   2UP",
        Menu::TextColor::TEXT_WHITE, Vec2i{3, 0});
    Menu::Text("00", Menu::TextColor::TEXT_WHITE, Vec2i{5, 1});
}

///////////////////////////////////////////////////////////////////////////////
void Game::BeginPlay(void)
{}

///////////////////////////////////////////////////////////////////////////////
void Game::Tick(float deltaSeconds)
{
    mTimer += deltaSeconds;

    DrawMapBaseLayer();
    DrawScore();
}

///////////////////////////////////////////////////////////////////////////////
void Game::EndPlay(void)
{}

} // namespace Arc::Pacman
