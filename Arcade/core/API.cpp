///////////////////////////////////////////////////////////////////////////////
// Dependencies
///////////////////////////////////////////////////////////////////////////////
#include "Arcade/core/API.hpp"

///////////////////////////////////////////////////////////////////////////////
// Namespace Arc
///////////////////////////////////////////////////////////////////////////////
namespace Arc
{

///////////////////////////////////////////////////////////////////////////////
std::unordered_map<API::Event::Channel, std::queue<API::Event>> API::mEvents;

///////////////////////////////////////////////////////////////////////////////
std::queue<std::tuple<IGameModule::Asset, Vec2i, Color>> API::mDrawables;

///////////////////////////////////////////////////////////////////////////////
int API::mGridWidth;

///////////////////////////////////////////////////////////////////////////////
int API::mGridHeight;

///////////////////////////////////////////////////////////////////////////////
std::optional<API::Event> API::PollEvent(API::Event::Channel channel)
{
    if (mEvents.count(channel) == 0 || mEvents[channel].empty()) {
        return (std::nullopt);
    }
    auto event = mEvents[channel].front();
    mEvents[channel].pop();
    return (event);
}

///////////////////////////////////////////////////////////////////////////////
void API::PushEvent(API::Event::Channel channel, const Event& event)
{
    mEvents[channel].push(event);
}

///////////////////////////////////////////////////////////////////////////////
void API::Draw(const IGameModule::Asset& drawable, Vec2i position, Color color)
{
    mDrawables.push(std::make_tuple(drawable, position, color));
}

///////////////////////////////////////////////////////////////////////////////
std::tuple<IGameModule::Asset, Vec2i, Color> API::PopDraw(void)
{
    auto drawable = mDrawables.front();
    mDrawables.pop();
    return (drawable);
}

///////////////////////////////////////////////////////////////////////////////
bool API::IsDrawQueueEmpty(void)
{
    return (mDrawables.empty());
}

} // namespace Arc
